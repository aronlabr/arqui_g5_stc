version: '3.7'
services:
  sql-db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    container_name: sql-db
    restart: unless-stopped
    # env_file: ./visita/.env.local
    environment:
      MYSQL_ROOT_PASSWORD: "admin"
      MYSQL_DATABASE: "g5_db"
    ports:
      - "3307:3306"
    volumes:
      - ./visita/infraestructura/esquema/Setup_Visita_DB.sql:/docker-entrypoint-initdb.d/Setup_Visita_DB.sql
      - ./notificacion/infraestructura/esquema/Setup_Notif_DB.sql:/docker-entrypoint-initdb.d/Setup_Notif_DB.sql
      - ./autenticacion/infraestructura/esquema/micro_login.sql:/docker-entrypoint-initdb.d/micro_login.sql
    networks:
      - backend

  visita:
    build:
      dockerfile: Dockerfile
      context: ./visita
    container_name: visita
    restart: unless-stopped
    # env_file: /visita/.env.local
    ports:
      - "8001:8001"
    depends_on:
      - "sql-db"
    networks:
      - backend

  notif:
    build:
      dockerfile: Dockerfile
      context: ./notificacion
    container_name: notif
    restart: unless-stopped
    # env_file: /visita/.env.local
    ports:
      - "8002:8002"
    depends_on:
      - "sql-db"
    networks:
      - backend
  auth:
    build:
      dockerfile: Dockerfile
      context: ./autenticacion
    container_name: auth
    restart: unless-stopped
    # env_file: /visita/.env.local
    ports:
      - "8003:8003"
    depends_on:
      - "sql-db"
    networks:
      - backend

  tecnicos:
      build:
        dockerfile: Dockerfile
        context: ./tecnicos
      container_name: tecnicos
      restart: unless-stopped
      # env_file: /visita/.env.local
      ports:
        - "8004:8004"
      depends_on:
        - "sql-db"
      networks:
        - backend

  gateway:
    build:
      dockerfile: Dockerfile
      context: ./gateway
    container_name: gateway
    restart: unless-stopped
    depends_on:
      - "visita"
      - "notif"
    ports:
      - "80:80"
    networks:
      - backend

  adminer:
    image: adminer
    restart: unless-stopped
    container_name: adminer
    ports:
      - "8080:8080"
    depends_on:
      - "sql-db"
    networks:
      - backend

networks:
  backend:
    driver: bridge