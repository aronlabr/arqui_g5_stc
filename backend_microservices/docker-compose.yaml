version: '3.9'
services:
  sql-db:
    image: mysql:8.0
    # command: --default-authentication-plugin=caching_sha2_password
    container_name: sql-db
    restart: unless-stopped
    # env_file: ./visita/.env.local
    environment:
      MYSQL_ROOT_PASSWORD: "admin"
      MYSQL_DATABASE: "g5_db"
    ports:
      - "3307:3306"
    volumes:
      - ./visita/infraestructura/esquema/Setup_Visita_DB.sql:/docker-entrypoint-initdb.d/Setup_Visita_DB.sql
      - ./notificacion/infraestructura/esquema/Setup_Notif_DB.sql:/docker-entrypoint-initdb.d/Setup_Notif_DB.sql
      - ./autenticacion/infraestructura/esquema/micro_login.sql:/docker-entrypoint-initdb.d/micro_login.sql
      - ./GestionActividades/infraestructura/esquema/g5_gestact.sql:/docker-entrypoint-initdb.d/g5_gestact.sql
      - ./GestionActividades/infraestructura/esquema/g5_mock_act_data.sql:/docker-entrypoint-initdb.d/g5_mock_act_data.sql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 1m30s
      timeout: 30s
      retries: 3

  visita:
    build:
      dockerfile: Dockerfile
      context: ./visita
    container_name: visita
    restart: unless-stopped
    env_file: 
      - .env
    environment:
      - "PORT=${PORT_1}"
      - "API_INCID=http://incidentes:8005/incidentes"
      - "API_TECN=http://tecnicos:8004/technicians"
    ports:
      - "8001:8001"
    depends_on:
      - "sql-db"
    networks:
      - backend

  notif:
    build:
      dockerfile: Dockerfile
      context: ./notificacion
    container_name: notif
    restart: unless-stopped
    env_file: 
      - .env
    environment:
      - "PORT=${PORT_2}"
    ports:
      - "8002:8002"
    depends_on:
      - "sql-db"
    networks:
      - backend

  auth:
    build:
      dockerfile: Dockerfile
      context: ./autenticacion
    container_name: auth
    restart: unless-stopped
    env_file: 
      - .env
    environment:
      - "PORT=${PORT_3}"
      - "TECNICO_API=http://tecnicos:8004/technicians"
    ports:
      - "8003:8003"
    depends_on:
      - "sql-db"
    networks:
      - backend

  tecnicos:
    build:
      dockerfile: Dockerfile
      context: ./tecnicos
    container_name: tecnicos
    restart: unless-stopped
    env_file: 
      - .env
    environment:
      - "APP_PORT=${PORT_4}"
      - "DB_HOST=${HOST}"
      - "DB_USER=${USER}"
      - "DB_PASSWORD=${PASS}"
      - "DB_PORT=${DBPORT}"
      - "DB_NAME=${DBNAME}"
    ports:
      - "8004:8004"
    depends_on:
      sql-db:
        condition: service_healthy
    networks:
      - backend

  incidentes:
    build:
      dockerfile: Dockerfile
      context: ./GestionActividades
    container_name: incidentes
    restart: unless-stopped
    env_file: 
      - .env
    environment:
      - "PORT=${PORT_5}"
    ports:
      - "8005:8005"
    depends_on:
      sql-db:
        condition: service_healthy
    networks:
      - backend
    
  gateway:
    build:
      dockerfile: Dockerfile
      context: ./gateway
    container_name: gateway
    restart: unless-stopped
    depends_on:
      - "visita"
      - "notif"
      - "auth"
      - "tecnicos"
      - "incidentes"
    ports:
      - "80:80"
    networks:
      - backend

  adminer:
    image: adminer
    restart: unless-stopped
    container_name: adminer
    ports:
      - "8080:8080"
    depends_on:
      - "sql-db"
    networks:
      - backend

networks:
  backend:
    driver: bridge